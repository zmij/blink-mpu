$date
	Fri Jun 23 11:27:51 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module dummy_apb2_ram_tb $end
$var wire 1 ! slverr $end
$var wire 1 " ready $end
$var wire 32 # rdata [31:0] $end
$var parameter 32 $ addr_width $end
$var parameter 32 % data_width $end
$var parameter 32 & strobe_count $end
$var parameter 32 ' tick $end
$var reg 8 ( addr [7:0] $end
$var reg 1 ) clk $end
$var reg 1 * enable $end
$var reg 3 + prot [2:0] $end
$var reg 1 , rst_n $end
$var reg 1 - sel $end
$var reg 4 . strb [3:0] $end
$var reg 32 / wdata [31:0] $end
$var reg 1 0 write $end
$scope module ram_ $end
$var wire 8 1 addr [7:0] $end
$var wire 1 ) clk $end
$var wire 1 * enable $end
$var wire 3 2 prot [2:0] $end
$var wire 1 , rst_n $end
$var wire 1 - sel $end
$var wire 4 3 strb [3:0] $end
$var wire 32 4 wdata [31:0] $end
$var wire 1 0 write $end
$var parameter 32 5 addr_width $end
$var parameter 32 6 data_width $end
$var parameter 2 7 idle_state $end
$var parameter 2 8 r_enable $end
$var parameter 32 9 strobe_count $end
$var parameter 2 : w_enable $end
$var reg 32 ; rdata [31:0] $end
$var reg 1 " ready $end
$var reg 1 ! slverr $end
$var reg 2 < state_ [1:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1 :
b100 9
b10 8
b0 7
b100000 6
b1000 5
b10 '
b100 &
b100000 %
b1000 $
$end
#0
$dumpvars
b0 <
bx ;
bx 4
b1111 3
b0 2
bx 1
00
bx /
b1111 .
x-
0,
b0 +
x*
0)
bx (
bx #
0"
0!
$end
#1000
1)
#2000
0)
1-
b101010 /
b101010 4
b1101 (
b1101 1
10
1,
#3000
b1 <
1)
#4000
0)
1*
#5000
1"
b0 <
1)
#6000
0)
0-
00
0*
#7000
0"
1)
#8000
0)
1-
#9000
b10 <
1)
#10000
0)
1*
#11000
1"
b101010 #
b101010 ;
b0 <
1)
#12000
0)
0-
0*
#13000
0"
bx #
bx ;
1)
#14000
0)
